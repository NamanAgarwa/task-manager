openapi: 3.0.0
info:
  title: Task Manager API
  version: 1.0.0
  description: API documentation for the Task Manager backend (MERN stack)
servers:
  - url: http://localhost:5000/api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date
        priority:
          type: string
          enum: [High, Medium, Low]
        completed:
          type: boolean
        user:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
paths:
  /auth/signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
        "400":
          description: Validation error
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
        "400":
          description: Invalid credentials
  /auth/refresh:
    post:
      summary: Refresh JWT access token
      responses:
        "200":
          description: New access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Invalid or expired refresh token
  /tasks:
    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, dueDate, priority]
              properties:
                title:
                  type: string
                description:
                  type: string
                dueDate:
                  type: string
                  format: date
                priority:
                  type: string
                  enum: [High, Medium, Low]
      responses:
        "201":
          description: Task created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Validation error
    get:
      summary: Get all tasks (with filtering, sorting, pagination)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [completed, pending]
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        "200":
          description: List of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
  /tasks/{id}:
    get:
      summary: Get a task by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Task object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
    put:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                dueDate:
                  type: string
                  format: date
                priority:
                  type: string
                  enum: [High, Medium, Low]
                completed:
                  type: boolean
      responses:
        "200":
          description: Updated task object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Task deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        "404":
          description: Task not found
  /tasks/analytics/dashboard:
    get:
      summary: Get dashboard analytics
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  priorityDist:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        count:
                          type: integer
                  completionRate:
                    type: integer
                  upcoming:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
                  total:
                    type: integer
                  completed:
                    type: integer
